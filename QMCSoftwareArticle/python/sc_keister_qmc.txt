>>> keister = qp.Keister(qp.Sobol(2))
>>> stopping = qp.CubQMCSobolG(keister, abs_tol=1e-3)
>>> solution_qmc,data_qmc = stopping.integrate()
>>> data_qmc # equivalent to print(data_qmc)
LDTransformData (AccumulateData Object)
    solution        1.808
    error_bound     6.06e-04
    n_total         2^(13)
    time_integrate  0.008
CubQMCSobolG (StoppingCriterion Object)
    abs_tol         0.001
    rel_tol         0
    n_init          2^(10)
    n_max           2^(35)
Keister (Integrand Object)
Gaussian (TrueMeasure Object)
    mean            0
    covariance      2^(-1)
    decomp_type     PCA
Sobol (DiscreteDistribution Object)
    d               2^(1)
    dvec            [0 1]
    randomize       LMS_DS
    graycode        0
    entropy         326942311248945520670220938885737472885
    spawn_key       ()